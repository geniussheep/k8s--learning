node ('jenkins-slave-linux'){
    
    parameters{
    }

    stage('clear workspace'){
        sh "pwd"
        sh "rm -rf *"
    }
    stage("checkout code"){
        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '05b8e78b-2488-4507-8802-abb82e2eb9ce', url: 'https://gitlab.benlai.work/java/bdk-data-examples.git']]])
    }
    def mvnHome = tool 'maven' //此处需要jenkins配置全局工具 参见  https://blog.csdn.net/qq_35299863/article/details/84329798
    def jdkHome = tool 'java_1.8.0_212'
    env.PATH = "${mvnHome}/bin;${jdkHome}/bin;${env.PATH}"
    env.GIT_TAG = sh(returnStdout: true,script: 'git describe --tags').trim();
    stage("mvc build"){
        sh 'mvc clean package -T 1C -Dmaven.test.skip=true'
    }

    stage("download Dockerfile"){
        sh 'echo "wget dockerfile url..."'
    }

    stage('build and push images'){
        // This step should not normally be used in your script. Consult the inline help for details.
        withDockerRegistry(credentialsId: '7f0fbed4-24f1-4f3e-8a87-60ee90f23cc8', url: 'https://harbor.ibenlai.com') {
            // some block
        }
    }
}